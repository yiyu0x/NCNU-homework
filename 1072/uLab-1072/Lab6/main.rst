                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.8.0 #10562 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _a
                                     12 	.globl _t
                                     13 	.globl _table
                                     14 	.globl _main
                                     15 	.globl _display
                                     16 	.globl _delay
                                     17 	.globl _CY
                                     18 	.globl _AC
                                     19 	.globl _F0
                                     20 	.globl _RS1
                                     21 	.globl _RS0
                                     22 	.globl _OV
                                     23 	.globl _F1
                                     24 	.globl _P
                                     25 	.globl _PS
                                     26 	.globl _PT1
                                     27 	.globl _PX1
                                     28 	.globl _PT0
                                     29 	.globl _PX0
                                     30 	.globl _RD
                                     31 	.globl _WR
                                     32 	.globl _T1
                                     33 	.globl _T0
                                     34 	.globl _INT1
                                     35 	.globl _INT0
                                     36 	.globl _TXD
                                     37 	.globl _RXD
                                     38 	.globl _P3_7
                                     39 	.globl _P3_6
                                     40 	.globl _P3_5
                                     41 	.globl _P3_4
                                     42 	.globl _P3_3
                                     43 	.globl _P3_2
                                     44 	.globl _P3_1
                                     45 	.globl _P3_0
                                     46 	.globl _EA
                                     47 	.globl _ES
                                     48 	.globl _ET1
                                     49 	.globl _EX1
                                     50 	.globl _ET0
                                     51 	.globl _EX0
                                     52 	.globl _P2_7
                                     53 	.globl _P2_6
                                     54 	.globl _P2_5
                                     55 	.globl _P2_4
                                     56 	.globl _P2_3
                                     57 	.globl _P2_2
                                     58 	.globl _P2_1
                                     59 	.globl _P2_0
                                     60 	.globl _SM0
                                     61 	.globl _SM1
                                     62 	.globl _SM2
                                     63 	.globl _REN
                                     64 	.globl _TB8
                                     65 	.globl _RB8
                                     66 	.globl _TI
                                     67 	.globl _RI
                                     68 	.globl _P1_7
                                     69 	.globl _P1_6
                                     70 	.globl _P1_5
                                     71 	.globl _P1_4
                                     72 	.globl _P1_3
                                     73 	.globl _P1_2
                                     74 	.globl _P1_1
                                     75 	.globl _P1_0
                                     76 	.globl _TF1
                                     77 	.globl _TR1
                                     78 	.globl _TF0
                                     79 	.globl _TR0
                                     80 	.globl _IE1
                                     81 	.globl _IT1
                                     82 	.globl _IE0
                                     83 	.globl _IT0
                                     84 	.globl _P0_7
                                     85 	.globl _P0_6
                                     86 	.globl _P0_5
                                     87 	.globl _P0_4
                                     88 	.globl _P0_3
                                     89 	.globl _P0_2
                                     90 	.globl _P0_1
                                     91 	.globl _P0_0
                                     92 	.globl _B
                                     93 	.globl _ACC
                                     94 	.globl _PSW
                                     95 	.globl _IP
                                     96 	.globl _P3
                                     97 	.globl _IE
                                     98 	.globl _P2
                                     99 	.globl _SBUF
                                    100 	.globl _SCON
                                    101 	.globl _P1
                                    102 	.globl _TH1
                                    103 	.globl _TH0
                                    104 	.globl _TL1
                                    105 	.globl _TL0
                                    106 	.globl _TMOD
                                    107 	.globl _TCON
                                    108 	.globl _PCON
                                    109 	.globl _DPH
                                    110 	.globl _DPL
                                    111 	.globl _SP
                                    112 	.globl _P0
                                    113 	.globl _index
                                    114 	.globl _multi
                                    115 	.globl _tmp
                                    116 	.globl _counter
                                    117 ;--------------------------------------------------------
                                    118 ; special function registers
                                    119 ;--------------------------------------------------------
                                    120 	.area RSEG    (ABS,DATA)
      000000                        121 	.org 0x0000
                           000080   122 _P0	=	0x0080
                           000081   123 _SP	=	0x0081
                           000082   124 _DPL	=	0x0082
                           000083   125 _DPH	=	0x0083
                           000087   126 _PCON	=	0x0087
                           000088   127 _TCON	=	0x0088
                           000089   128 _TMOD	=	0x0089
                           00008A   129 _TL0	=	0x008a
                           00008B   130 _TL1	=	0x008b
                           00008C   131 _TH0	=	0x008c
                           00008D   132 _TH1	=	0x008d
                           000090   133 _P1	=	0x0090
                           000098   134 _SCON	=	0x0098
                           000099   135 _SBUF	=	0x0099
                           0000A0   136 _P2	=	0x00a0
                           0000A8   137 _IE	=	0x00a8
                           0000B0   138 _P3	=	0x00b0
                           0000B8   139 _IP	=	0x00b8
                           0000D0   140 _PSW	=	0x00d0
                           0000E0   141 _ACC	=	0x00e0
                           0000F0   142 _B	=	0x00f0
                                    143 ;--------------------------------------------------------
                                    144 ; special function bits
                                    145 ;--------------------------------------------------------
                                    146 	.area RSEG    (ABS,DATA)
      000000                        147 	.org 0x0000
                           000080   148 _P0_0	=	0x0080
                           000081   149 _P0_1	=	0x0081
                           000082   150 _P0_2	=	0x0082
                           000083   151 _P0_3	=	0x0083
                           000084   152 _P0_4	=	0x0084
                           000085   153 _P0_5	=	0x0085
                           000086   154 _P0_6	=	0x0086
                           000087   155 _P0_7	=	0x0087
                           000088   156 _IT0	=	0x0088
                           000089   157 _IE0	=	0x0089
                           00008A   158 _IT1	=	0x008a
                           00008B   159 _IE1	=	0x008b
                           00008C   160 _TR0	=	0x008c
                           00008D   161 _TF0	=	0x008d
                           00008E   162 _TR1	=	0x008e
                           00008F   163 _TF1	=	0x008f
                           000090   164 _P1_0	=	0x0090
                           000091   165 _P1_1	=	0x0091
                           000092   166 _P1_2	=	0x0092
                           000093   167 _P1_3	=	0x0093
                           000094   168 _P1_4	=	0x0094
                           000095   169 _P1_5	=	0x0095
                           000096   170 _P1_6	=	0x0096
                           000097   171 _P1_7	=	0x0097
                           000098   172 _RI	=	0x0098
                           000099   173 _TI	=	0x0099
                           00009A   174 _RB8	=	0x009a
                           00009B   175 _TB8	=	0x009b
                           00009C   176 _REN	=	0x009c
                           00009D   177 _SM2	=	0x009d
                           00009E   178 _SM1	=	0x009e
                           00009F   179 _SM0	=	0x009f
                           0000A0   180 _P2_0	=	0x00a0
                           0000A1   181 _P2_1	=	0x00a1
                           0000A2   182 _P2_2	=	0x00a2
                           0000A3   183 _P2_3	=	0x00a3
                           0000A4   184 _P2_4	=	0x00a4
                           0000A5   185 _P2_5	=	0x00a5
                           0000A6   186 _P2_6	=	0x00a6
                           0000A7   187 _P2_7	=	0x00a7
                           0000A8   188 _EX0	=	0x00a8
                           0000A9   189 _ET0	=	0x00a9
                           0000AA   190 _EX1	=	0x00aa
                           0000AB   191 _ET1	=	0x00ab
                           0000AC   192 _ES	=	0x00ac
                           0000AF   193 _EA	=	0x00af
                           0000B0   194 _P3_0	=	0x00b0
                           0000B1   195 _P3_1	=	0x00b1
                           0000B2   196 _P3_2	=	0x00b2
                           0000B3   197 _P3_3	=	0x00b3
                           0000B4   198 _P3_4	=	0x00b4
                           0000B5   199 _P3_5	=	0x00b5
                           0000B6   200 _P3_6	=	0x00b6
                           0000B7   201 _P3_7	=	0x00b7
                           0000B0   202 _RXD	=	0x00b0
                           0000B1   203 _TXD	=	0x00b1
                           0000B2   204 _INT0	=	0x00b2
                           0000B3   205 _INT1	=	0x00b3
                           0000B4   206 _T0	=	0x00b4
                           0000B5   207 _T1	=	0x00b5
                           0000B6   208 _WR	=	0x00b6
                           0000B7   209 _RD	=	0x00b7
                           0000B8   210 _PX0	=	0x00b8
                           0000B9   211 _PT0	=	0x00b9
                           0000BA   212 _PX1	=	0x00ba
                           0000BB   213 _PT1	=	0x00bb
                           0000BC   214 _PS	=	0x00bc
                           0000D0   215 _P	=	0x00d0
                           0000D1   216 _F1	=	0x00d1
                           0000D2   217 _OV	=	0x00d2
                           0000D3   218 _RS0	=	0x00d3
                           0000D4   219 _RS1	=	0x00d4
                           0000D5   220 _F0	=	0x00d5
                           0000D6   221 _AC	=	0x00d6
                           0000D7   222 _CY	=	0x00d7
                                    223 ;--------------------------------------------------------
                                    224 ; overlayable register banks
                                    225 ;--------------------------------------------------------
                                    226 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        227 	.ds 8
                                    228 ;--------------------------------------------------------
                                    229 ; internal ram data
                                    230 ;--------------------------------------------------------
                                    231 	.area DSEG    (DATA)
      000008                        232 _counter::
      000008                        233 	.ds 2
      00000A                        234 _tmp::
      00000A                        235 	.ds 2
      00000C                        236 _multi::
      00000C                        237 	.ds 2
      00000E                        238 _index::
      00000E                        239 	.ds 2
                                    240 ;--------------------------------------------------------
                                    241 ; overlayable items in internal ram 
                                    242 ;--------------------------------------------------------
                                    243 	.area	OSEG    (OVR,DATA)
                                    244 ;--------------------------------------------------------
                                    245 ; Stack segment in internal ram 
                                    246 ;--------------------------------------------------------
                                    247 	.area	SSEG
      000010                        248 __start__stack:
      000010                        249 	.ds	1
                                    250 
                                    251 ;--------------------------------------------------------
                                    252 ; indirectly addressable internal ram data
                                    253 ;--------------------------------------------------------
                                    254 	.area ISEG    (DATA)
                                    255 ;--------------------------------------------------------
                                    256 ; absolute internal ram data
                                    257 ;--------------------------------------------------------
                                    258 	.area IABS    (ABS,DATA)
                                    259 	.area IABS    (ABS,DATA)
                                    260 ;--------------------------------------------------------
                                    261 ; bit data
                                    262 ;--------------------------------------------------------
                                    263 	.area BSEG    (BIT)
                                    264 ;--------------------------------------------------------
                                    265 ; paged external ram data
                                    266 ;--------------------------------------------------------
                                    267 	.area PSEG    (PAG,XDATA)
                                    268 ;--------------------------------------------------------
                                    269 ; external ram data
                                    270 ;--------------------------------------------------------
                                    271 	.area XSEG    (XDATA)
                                    272 ;--------------------------------------------------------
                                    273 ; absolute external ram data
                                    274 ;--------------------------------------------------------
                                    275 	.area XABS    (ABS,XDATA)
                                    276 ;--------------------------------------------------------
                                    277 ; external initialized ram data
                                    278 ;--------------------------------------------------------
                                    279 	.area XISEG   (XDATA)
                                    280 	.area HOME    (CODE)
                                    281 	.area GSINIT0 (CODE)
                                    282 	.area GSINIT1 (CODE)
                                    283 	.area GSINIT2 (CODE)
                                    284 	.area GSINIT3 (CODE)
                                    285 	.area GSINIT4 (CODE)
                                    286 	.area GSINIT5 (CODE)
                                    287 	.area GSINIT  (CODE)
                                    288 	.area GSFINAL (CODE)
                                    289 	.area CSEG    (CODE)
                                    290 ;--------------------------------------------------------
                                    291 ; interrupt vector 
                                    292 ;--------------------------------------------------------
                                    293 	.area HOME    (CODE)
      000000                        294 __interrupt_vect:
      000000 02 00 06         [24]  295 	ljmp	__sdcc_gsinit_startup
                                    296 ;--------------------------------------------------------
                                    297 ; global & static initialisations
                                    298 ;--------------------------------------------------------
                                    299 	.area HOME    (CODE)
                                    300 	.area GSINIT  (CODE)
                                    301 	.area GSFINAL (CODE)
                                    302 	.area GSINIT  (CODE)
                                    303 	.globl __sdcc_gsinit_startup
                                    304 	.globl __sdcc_program_startup
                                    305 	.globl __start__stack
                                    306 	.globl __mcs51_genXINIT
                                    307 	.globl __mcs51_genXRAMCLEAR
                                    308 	.globl __mcs51_genRAMCLEAR
                                    309 	.area GSFINAL (CODE)
      00005F 02 00 03         [24]  310 	ljmp	__sdcc_program_startup
                                    311 ;--------------------------------------------------------
                                    312 ; Home
                                    313 ;--------------------------------------------------------
                                    314 	.area HOME    (CODE)
                                    315 	.area HOME    (CODE)
      000003                        316 __sdcc_program_startup:
      000003 02 00 F9         [24]  317 	ljmp	_main
                                    318 ;	return from main will return to caller
                                    319 ;--------------------------------------------------------
                                    320 ; code
                                    321 ;--------------------------------------------------------
                                    322 	.area CSEG    (CODE)
                                    323 ;------------------------------------------------------------
                                    324 ;Allocation info for local variables in function 'delay'
                                    325 ;------------------------------------------------------------
                                    326 ;d1                        Allocated to registers r6 r7 
                                    327 ;------------------------------------------------------------
                                    328 ;	main.c:38: void delay() {
                                    329 ;	-----------------------------------------
                                    330 ;	 function delay
                                    331 ;	-----------------------------------------
      000062                        332 _delay:
                           000007   333 	ar7 = 0x07
                           000006   334 	ar6 = 0x06
                           000005   335 	ar5 = 0x05
                           000004   336 	ar4 = 0x04
                           000003   337 	ar3 = 0x03
                           000002   338 	ar2 = 0x02
                           000001   339 	ar1 = 0x01
                           000000   340 	ar0 = 0x00
                                    341 ;	main.c:40: for (d1 = 0; d1 < 800; d1 ++) {
      000062 7E 20            [12]  342 	mov	r6,#0x20
      000064 7F 03            [12]  343 	mov	r7,#0x03
      000066                        344 00104$:
      000066 EE               [12]  345 	mov	a,r6
      000067 24 FF            [12]  346 	add	a,#0xff
      000069 FC               [12]  347 	mov	r4,a
      00006A EF               [12]  348 	mov	a,r7
      00006B 34 FF            [12]  349 	addc	a,#0xff
      00006D FD               [12]  350 	mov	r5,a
      00006E 8C 06            [24]  351 	mov	ar6,r4
      000070 8D 07            [24]  352 	mov	ar7,r5
      000072 EC               [12]  353 	mov	a,r4
      000073 4D               [12]  354 	orl	a,r5
      000074 70 F0            [24]  355 	jnz	00104$
                                    356 ;	main.c:44: }
      000076 22               [24]  357 	ret
                                    358 ;------------------------------------------------------------
                                    359 ;Allocation info for local variables in function 'display'
                                    360 ;------------------------------------------------------------
                                    361 ;	main.c:45: void display(){
                                    362 ;	-----------------------------------------
                                    363 ;	 function display
                                    364 ;	-----------------------------------------
      000077                        365 _display:
                                    366 ;	main.c:46: P0=tmp^0xff;
      000077 74 FF            [12]  367 	mov	a,#0xff
      000079 65 0A            [12]  368 	xrl	a,_tmp
      00007B FE               [12]  369 	mov	r6,a
      00007C 8E 80            [24]  370 	mov	_P0,r6
                                    371 ;	main.c:47: P2=a[((counter--)+index)&7];
      00007E AE 08            [24]  372 	mov	r6,_counter
      000080 15 08            [12]  373 	dec	_counter
      000082 74 FF            [12]  374 	mov	a,#0xff
      000084 B5 08 02         [24]  375 	cjne	a,_counter,00121$
      000087 15 09            [12]  376 	dec	(_counter + 1)
      000089                        377 00121$:
      000089 E5 0E            [12]  378 	mov	a,_index
      00008B 2E               [12]  379 	add	a,r6
      00008C FE               [12]  380 	mov	r6,a
      00008D 33               [12]  381 	rlc	a
      00008E 95 E0            [12]  382 	subb	a,acc
      000090 53 06 07         [24]  383 	anl	ar6,#0x07
      000093 7F 00            [12]  384 	mov	r7,#0x00
      000095 EE               [12]  385 	mov	a,r6
      000096 2E               [12]  386 	add	a,r6
      000097 FE               [12]  387 	mov	r6,a
      000098 EF               [12]  388 	mov	a,r7
      000099 33               [12]  389 	rlc	a
      00009A FF               [12]  390 	mov	r7,a
      00009B EE               [12]  391 	mov	a,r6
      00009C 24 A5            [12]  392 	add	a,#_a
      00009E F5 82            [12]  393 	mov	dpl,a
      0000A0 EF               [12]  394 	mov	a,r7
      0000A1 34 01            [12]  395 	addc	a,#(_a >> 8)
      0000A3 F5 83            [12]  396 	mov	dph,a
      0000A5 E4               [12]  397 	clr	a
      0000A6 93               [24]  398 	movc	a,@a+dptr
      0000A7 F5 A0            [12]  399 	mov	_P2,a
                                    400 ;	main.c:48: delay();
      0000A9 12 00 62         [24]  401 	lcall	_delay
                                    402 ;	main.c:49: tmp<<=1;
      0000AC E5 0A            [12]  403 	mov	a,_tmp
      0000AE 25 0A            [12]  404 	add	a,_tmp
      0000B0 F5 0A            [12]  405 	mov	_tmp,a
      0000B2 E5 0B            [12]  406 	mov	a,(_tmp + 1)
      0000B4 33               [12]  407 	rlc	a
      0000B5 F5 0B            [12]  408 	mov	(_tmp + 1),a
                                    409 ;	main.c:50: if(tmp==0){
      0000B7 E5 0A            [12]  410 	mov	a,_tmp
      0000B9 45 0B            [12]  411 	orl	a,(_tmp + 1)
                                    412 ;	main.c:51: tmp=0x01;
                                    413 ;	main.c:52: counter=7;
      0000BB 70 3B            [24]  414 	jnz	00107$
      0000BD 75 0A 01         [24]  415 	mov	_tmp,#0x01
      0000C0 F5 0B            [12]  416 	mov	(_tmp + 1),a
      0000C2 75 08 07         [24]  417 	mov	_counter,#0x07
      0000C5 F5 09            [12]  418 	mov	(_counter + 1),a
                                    419 ;	main.c:53: multi++;
      0000C7 05 0C            [12]  420 	inc	_multi
      0000C9 E4               [12]  421 	clr	a
      0000CA B5 0C 02         [24]  422 	cjne	a,_multi,00123$
      0000CD 05 0D            [12]  423 	inc	(_multi + 1)
      0000CF                        424 00123$:
                                    425 ;	main.c:54: if(multi==10){
      0000CF 74 0A            [12]  426 	mov	a,#0x0a
      0000D1 B5 0C 06         [24]  427 	cjne	a,_multi,00124$
      0000D4 E4               [12]  428 	clr	a
      0000D5 B5 0D 02         [24]  429 	cjne	a,(_multi + 1),00124$
      0000D8 80 01            [24]  430 	sjmp	00125$
      0000DA                        431 00124$:
      0000DA 22               [24]  432 	ret
      0000DB                        433 00125$:
                                    434 ;	main.c:55: multi=0;
      0000DB E4               [12]  435 	clr	a
      0000DC F5 0C            [12]  436 	mov	_multi,a
      0000DE F5 0D            [12]  437 	mov	(_multi + 1),a
                                    438 ;	main.c:56: index++;
      0000E0 05 0E            [12]  439 	inc	_index
                                    440 ;	genFromRTrack removed	clr	a
      0000E2 B5 0E 02         [24]  441 	cjne	a,_index,00126$
      0000E5 05 0F            [12]  442 	inc	(_index + 1)
      0000E7                        443 00126$:
                                    444 ;	main.c:57: if(index==8)
      0000E7 74 08            [12]  445 	mov	a,#0x08
      0000E9 B5 0E 06         [24]  446 	cjne	a,_index,00127$
      0000EC E4               [12]  447 	clr	a
      0000ED B5 0F 02         [24]  448 	cjne	a,(_index + 1),00127$
      0000F0 80 01            [24]  449 	sjmp	00128$
      0000F2                        450 00127$:
      0000F2 22               [24]  451 	ret
      0000F3                        452 00128$:
                                    453 ;	main.c:58: index=0;
      0000F3 E4               [12]  454 	clr	a
      0000F4 F5 0E            [12]  455 	mov	_index,a
      0000F6 F5 0F            [12]  456 	mov	(_index + 1),a
      0000F8                        457 00107$:
                                    458 ;	main.c:61: }
      0000F8 22               [24]  459 	ret
                                    460 ;------------------------------------------------------------
                                    461 ;Allocation info for local variables in function 'main'
                                    462 ;------------------------------------------------------------
                                    463 ;	main.c:62: int main() {
                                    464 ;	-----------------------------------------
                                    465 ;	 function main
                                    466 ;	-----------------------------------------
      0000F9                        467 _main:
                                    468 ;	main.c:63: counter=7;
      0000F9 75 08 07         [24]  469 	mov	_counter,#0x07
      0000FC 75 09 00         [24]  470 	mov	(_counter + 1),#0x00
                                    471 ;	main.c:64: tmp=1;
      0000FF 75 0A 01         [24]  472 	mov	_tmp,#0x01
                                    473 ;	main.c:65: index=0;
      000102 E4               [12]  474 	clr	a
      000103 F5 0B            [12]  475 	mov	(_tmp + 1),a
      000105 F5 0E            [12]  476 	mov	_index,a
      000107 F5 0F            [12]  477 	mov	(_index + 1),a
                                    478 ;	main.c:66: P1=0xff;
      000109 75 90 FF         [24]  479 	mov	_P1,#0xff
                                    480 ;	main.c:67: while(1){
      00010C                        481 00102$:
                                    482 ;	main.c:68: display();
      00010C 12 00 77         [24]  483 	lcall	_display
                                    484 ;	main.c:75: }
      00010F 80 FB            [24]  485 	sjmp	00102$
                                    486 	.area CSEG    (CODE)
                                    487 	.area CONST   (CODE)
      000115                        488 _table:
      000115 01 00                  489 	.byte #0x01,#0x00	;  1
      000117 01 00                  490 	.byte #0x01,#0x00	;  1
      000119 01 00                  491 	.byte #0x01,#0x00	;  1
      00011B 01 00                  492 	.byte #0x01,#0x00	;  1
      00011D 01 00                  493 	.byte #0x01,#0x00	;  1
      00011F 01 00                  494 	.byte #0x01,#0x00	;  1
      000121 01 00                  495 	.byte #0x01,#0x00	;  1
      000123 01 00                  496 	.byte #0x01,#0x00	;  1
      000125 01 00                  497 	.byte #0x01,#0x00	;  1
      000127 01 00                  498 	.byte #0x01,#0x00	;  1
      000129 01 00                  499 	.byte #0x01,#0x00	;  1
      00012B 00 00                  500 	.byte #0x00,#0x00	;  0
      00012D 00 00                  501 	.byte #0x00,#0x00	;  0
      00012F 01 00                  502 	.byte #0x01,#0x00	;  1
      000131 01 00                  503 	.byte #0x01,#0x00	;  1
      000133 01 00                  504 	.byte #0x01,#0x00	;  1
      000135 01 00                  505 	.byte #0x01,#0x00	;  1
      000137 01 00                  506 	.byte #0x01,#0x00	;  1
      000139 00 00                  507 	.byte #0x00,#0x00	;  0
      00013B 01 00                  508 	.byte #0x01,#0x00	;  1
      00013D 01 00                  509 	.byte #0x01,#0x00	;  1
      00013F 00 00                  510 	.byte #0x00,#0x00	;  0
      000141 01 00                  511 	.byte #0x01,#0x00	;  1
      000143 01 00                  512 	.byte #0x01,#0x00	;  1
      000145 01 00                  513 	.byte #0x01,#0x00	;  1
      000147 01 00                  514 	.byte #0x01,#0x00	;  1
      000149 00 00                  515 	.byte #0x00,#0x00	;  0
      00014B 00 00                  516 	.byte #0x00,#0x00	;  0
      00014D 00 00                  517 	.byte #0x00,#0x00	;  0
      00014F 00 00                  518 	.byte #0x00,#0x00	;  0
      000151 01 00                  519 	.byte #0x01,#0x00	;  1
      000153 01 00                  520 	.byte #0x01,#0x00	;  1
      000155 01 00                  521 	.byte #0x01,#0x00	;  1
      000157 00 00                  522 	.byte #0x00,#0x00	;  0
      000159 01 00                  523 	.byte #0x01,#0x00	;  1
      00015B 01 00                  524 	.byte #0x01,#0x00	;  1
      00015D 01 00                  525 	.byte #0x01,#0x00	;  1
      00015F 01 00                  526 	.byte #0x01,#0x00	;  1
      000161 00 00                  527 	.byte #0x00,#0x00	;  0
      000163 01 00                  528 	.byte #0x01,#0x00	;  1
      000165 01 00                  529 	.byte #0x01,#0x00	;  1
      000167 00 00                  530 	.byte #0x00,#0x00	;  0
      000169 01 00                  531 	.byte #0x01,#0x00	;  1
      00016B 01 00                  532 	.byte #0x01,#0x00	;  1
      00016D 01 00                  533 	.byte #0x01,#0x00	;  1
      00016F 01 00                  534 	.byte #0x01,#0x00	;  1
      000171 00 00                  535 	.byte #0x00,#0x00	;  0
      000173 01 00                  536 	.byte #0x01,#0x00	;  1
      000175 01 00                  537 	.byte #0x01,#0x00	;  1
      000177 01 00                  538 	.byte #0x01,#0x00	;  1
      000179 01 00                  539 	.byte #0x01,#0x00	;  1
      00017B 01 00                  540 	.byte #0x01,#0x00	;  1
      00017D 01 00                  541 	.byte #0x01,#0x00	;  1
      00017F 01 00                  542 	.byte #0x01,#0x00	;  1
      000181 01 00                  543 	.byte #0x01,#0x00	;  1
      000183 01 00                  544 	.byte #0x01,#0x00	;  1
      000185 01 00                  545 	.byte #0x01,#0x00	;  1
      000187 01 00                  546 	.byte #0x01,#0x00	;  1
      000189 01 00                  547 	.byte #0x01,#0x00	;  1
      00018B 01 00                  548 	.byte #0x01,#0x00	;  1
      00018D 01 00                  549 	.byte #0x01,#0x00	;  1
      00018F 01 00                  550 	.byte #0x01,#0x00	;  1
      000191 01 00                  551 	.byte #0x01,#0x00	;  1
      000193 01 00                  552 	.byte #0x01,#0x00	;  1
      000195                        553 _t:
      000195 7F 00                  554 	.byte #0x7f,#0x00	;  127
      000197 3F 00                  555 	.byte #0x3f,#0x00	;  63
      000199 1F 00                  556 	.byte #0x1f,#0x00	;  31
      00019B 0F 00                  557 	.byte #0x0f,#0x00	;  15
      00019D 07 00                  558 	.byte #0x07,#0x00	;  7
      00019F 03 00                  559 	.byte #0x03,#0x00	;  3
      0001A1 01 00                  560 	.byte #0x01,#0x00	;  1
      0001A3 00 00                  561 	.byte #0x00,#0x00	;  0
      0001A5                        562 _a:
      0001A5 E7 00                  563 	.byte #0xe7,#0x00	;  231
      0001A7 DB 00                  564 	.byte #0xdb,#0x00	;  219
      0001A9 BD 00                  565 	.byte #0xbd,#0x00	;  189
      0001AB 81 00                  566 	.byte #0x81,#0x00	;  129
      0001AD BD 00                  567 	.byte #0xbd,#0x00	;  189
      0001AF BD 00                  568 	.byte #0xbd,#0x00	;  189
      0001B1 BD 00                  569 	.byte #0xbd,#0x00	;  189
      0001B3 FF 00                  570 	.byte #0xff,#0x00	;  255
                                    571 	.area XINIT   (CODE)
                                    572 	.area CABS    (ABS,CODE)
